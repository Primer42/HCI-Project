#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Siftables
\end_layout

\begin_layout Author
William Richard and Guvenc Usanmaz
\end_layout

\begin_layout Section
The Paper
\end_layout

\begin_layout Standard
We are presenting a paper titled 
\begin_inset Quotes eld
\end_inset

Siftables: Towards Sensor Network User Interfaces
\begin_inset Quotes erd
\end_inset

 by David Merill, Jeevan Kalanithi and Pattie Maes.
 They are all affiliated with the MIT Media Laboratory, and their paper
 can be found at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://alumni.media.mit.edu/~dmerrill/publications/dmerrill_Siftables.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Section
Summary of the Paper
\end_layout

\begin_layout Standard
Siftables is a novel tangible user interface platform, made possible by
 the miniaturization and availability of sensor networks.
 Siftables can be informally described as smart blocks or legos with screens.
 Each Siftables is a compact tile (36mm x 36mm x 10mm) with a color LCD
 screen, a 3-axis accelerometer, four IrDA infrared transceivers, an on-board
 rechargeable battery and an RF radio.
 Siftables work best in groups, as they are able interact with each other
 and the environment - they can be programed in multiple ways, to change
 their display depending on the presence and orientation of other Siftables.
\end_layout

\begin_layout Standard
Siftables provide an interface that better fit the way our brains naturally
 interact with the world.
 For instance, the Siftables can be programmed to show thumbnails of photographs
, and a user can simply push them into piles to easily and intuitively sort
 them into groups.
 It’s the exact same action as the user would take with printed photographs,
 with all of the conveniences of digital photos.
 Another example is a game similar to Scrabble or Boggle.
 Each Siftable displays a letter, and the user lines up the tiles to form
 words - each word created is automatically recognized and rewarded with
 points.
 This game is incredibly intuitive, and, since the letters can change, provides
 endless combinations and challenges.
\end_layout

\begin_layout Standard
The team that developed Siftables is also working on an interaction language
 for them, and other small, tactile user interfaces like them.
 This would provide a library of manipulations and metaphors analogous to
 point-and-click or drag-and-drop for the GUI, but particularly related
 to the multiple, small, distributed, manipulable tangible interface devices.
 This would allow developers to easily create programs for these sorts of
 interfaces, without having to worry about the gesture recognition stage,
 just as modern programers do not worry about the mouse position when a
 button or menu is selected.
\end_layout

\begin_layout Standard
Siftables could be improved by adding alternative outputs.
 For example, they could have:
\end_layout

\begin_layout Enumerate
built in speakers, to play sounds
\end_layout

\begin_layout Enumerate
pads that become hot or cold when touched
\end_layout

\begin_layout Enumerate
electromagnets to push and pull each other
\end_layout

\begin_layout Enumerate
a small motor attached to an unbalanced weight, allowing them to vibrate
\end_layout

\begin_layout Standard
Adding these extra components should’t be too problematic.
 All of the parts exist, and almost all are already used in common consumer
 electronics.
 The difficulty comes with making these parts small and energy efficient
 enough as to not drastically increase the size or decrease the battery
 life of the Siftables.
\end_layout

\begin_layout Standard
Adding these components make Siftable even more effective for classroom
 teaching, especially in a science classroom.
 With the added magnets, they could be used to teach the properties of magnetism
 and electricity.
 The electromagnets also improve the Scrabble game we discussed earlier
 - when a valid word is formed they could pull tightly next to each other,
 providing each other to give a feedback about formation of valid word.
 Then they could push away from each other when a new game starts, providing
 extra feedback indicating that the letters on the screens have changed.
\end_layout

\begin_layout Standard
Our storyboard tells a design which uses Siftables and assumes they have
 ability to convey heat, vibrate and give sound.
 
\end_layout

\begin_layout Section
Our Design - Chemistry Laboratory @ Home
\end_layout

\begin_layout Standard
Siftables could be programmed to teach chemical reactions.
 In our application Siftables will behave accordingly.
\end_layout

\begin_layout Enumerate
One Siftable will behave like a flask
\end_layout

\begin_layout Enumerate
One Siftable will decrease the temperature, which will be cool to the touch
\end_layout

\begin_layout Enumerate
One Siftable will increase the temperature, which will be warm to the touch
\end_layout

\begin_layout Enumerate
Other Siftables will allow the user to add or remove various elements.
\end_layout

\begin_layout Standard
The user will be able to add elements to the flask by moving a Siftable
 near the flask and tilting it off the table, just like pouring liquid in
 real life.
 Once the user has added elements to the flask, they can either heat it
 or cool it by putting it near the heating or cooling Siftables - just as
 if they put the flask on top of a Bunsen burner or into a refrigerator.
 They can continue to add elements as the flask changes temperature, and
 observe the reaction happening in the flask, just like in real life.
 The flask Siftable will be able to make noise, vibrate, or change temperature
 depending on the conditions its under or the reaction happening inside
 of it.
\end_layout

\begin_layout Section
Storyboard
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 1.png
	width 100col%
	BoundingBox 0bp 0bp 2205bp 550bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Setup of the Siftables
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2.png
	width 100col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Adding elements to the flasks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 3.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Placing the hot or cold Siftable near the flask Siftable causes the flask's
 temperature to raise or lower.
 You can continue to add elements as above.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 4.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
As the reaction takes place, it is shown on the screen, as well as other
 feedback, such as sounds and vibrations.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Design Rationale
\end_layout

\begin_layout Standard
This is a good application for Siftables for many reasons.
 It provides multiple avenues for user feedback, many more than a standard
 personal computer, while mimicking laboratory conditions and actions without
 requiring messy, dangerous and expensive equipment and chemicals.
 This is an ideal application for home schooled students or schools that
 do not have the resources to maintain a full chemistry lab.
 It could also be used to teach very young students about chemistry, as
 there is much less risk to using this system then there is with a standard
 chemistry lab.
 This system also allows students to experiment and play with chemicals,
 without risking harm to themselves or others.
\end_layout

\end_body
\end_document
